{
  "sections": [
    {
      "id": "maggie-workflows",
      "title": "Maggie Website Workflows",
      "description": "Step-by-step guide for updating Maggie's website",
      "icon": "üé®",
      "categories": [
        {
          "title": "1. Initial Setup (One Time Only)",
          "purpose": "Get the website code on your computer and prepare for editing",
          "commands": [
            {
              "command": "Cmd + Space, type 'terminal'",
              "description": "Press Command + Space, type 'terminal' and press Enter to open Terminal",
              "copyable": false
            },
            {
              "command": "cd ~/Documents",
              "description": "Navigate to your Documents folder where the project will be stored"
            },
            {
              "command": "git clone git@github.com:svanhalla/maggie.git",
              "description": "Download the website code to your computer using SSH"
            },
            {
              "command": "cd maggie",
              "description": "Enter the project folder that was just created"
            },
            {
              "command": "npm install",
              "description": "Install all required dependencies (this may take a few minutes)"
            }
          ]
        },
        {
          "title": "2. Making Content Changes",
          "purpose": "Edit website content by modifying JSON files in the data folder",
          "commands": [
            {
              "command": "cd ~/Documents/repos/maggie",
              "description": "Navigate to the maggie project folder"
            },
            {
              "command": "open data/about.json",
              "description": "üìù Biography, contact info, publications, and media links"
            },
            {
              "command": "open data/home.json",
              "description": "üè† Homepage content, featured sections, and layout settings"
            },
            {
              "command": "open data/workshops.json",
              "description": "üéì Workshop schedules, descriptions, and pricing"
            },
            {
              "command": "open data/books.json",
              "description": "üìö Published books, covers, and gallery images"
            },
            {
              "command": "open data/galleries.json",
              "description": "üèõÔ∏è Representing art galleries contact information"
            }
          ],
          "subsections": [
            {
              "title": "üñºÔ∏è Works Menu - Gallery Configuration & Collections",
              "commands": [
                {
                  "command": "open data/works.json",
                  "description": "üñºÔ∏è Main gallery page - controls thumbnails and links. Each 'id' field connects to works-[id].json files"
                },
                {
                  "command": "Example: \"id\": \"2022-2025\"",
                  "description": "üí° This ID in works.json links to ‚Üí works-2022-2025.json file",
                  "copyable": false
                },
                {
                  "command": "open data/works-2022-2025.json",
                  "description": "Recent artwork collection (2022-2025) - newest pieces"
                },
                {
                  "command": "open data/works-2014-2021.json",
                  "description": "Digital explorations period (2014-2021)"
                },
                {
                  "command": "open data/works-2010-2013.json",
                  "description": "Surreal narratives period (2010-2013)"
                },
                {
                  "command": "open data/works-2005-2009.json",
                  "description": "Digital dreams period (2005-2009)"
                },
                {
                  "command": "open data/works-1999-2004.json",
                  "description": "Early digital works period (1999-2004)"
                },
                {
                  "command": "open data/works-alice.json",
                  "description": "üê∞ Alice's Adventures in Wonderland themed collection"
                },
                {
                  "command": "open data/works-ttlg.json",
                  "description": "ü™û Through the Looking Glass themed collection"
                }
              ]
            }
          ]
        },
        {
          "title": "2b. JSON Editing Rules (IMPORTANT!)",
          "purpose": "Critical syntax rules to avoid breaking the website",
          "commands": [
            {
              "command": "\"text\": \"value\",",
              "description": "‚úÖ CORRECT: Use double quotes, comma after each item"
            },
            {
              "command": "\"text\": \"value\"",
              "description": "‚úÖ CORRECT: NO comma on the LAST item in a list"
            },
            {
              "command": "'text': 'value',",
              "description": "‚ùå WRONG: Never use single quotes in JSON"
            },
            {
              "command": "\"visible\": true",
              "description": "‚úÖ CORRECT: true/false (no quotes for booleans)"
            },
            {
              "command": "\"visible\": \"true\"",
              "description": "‚ùå WRONG: Don't put quotes around true/false"
            },
            {
              "command": "Check JSON syntax",
              "description": "üí° TIP: Dreamweaver shows red errors if JSON syntax is wrong"
            }
          ]
        },
        {
          "title": "2c. JSON File Format Guide",
          "purpose": "Understanding the structure and format of JSON files for website content",
          "commands": [
            {
              "command": "Basic JSON Structure",
              "description": "JSON files contain data in key-value pairs enclosed in curly braces { }",
              "copyable": false
            },
            {
              "command": "\"title\": \"Page Title\"",
              "description": "Text values must be in double quotes"
            },
            {
              "command": "\"visible\": true",
              "description": "Boolean values (true/false) have no quotes"
            },
            {
              "command": "\"year\": \"2025\"",
              "description": "Numbers can be in quotes for consistency"
            },
            {
              "command": "[\"item1\", \"item2\", \"item3\"]",
              "description": "Arrays (lists) use square brackets [ ]"
            },
            {
              "command": "Comma Rules",
              "description": "Put commas after each item, EXCEPT the last item in a list",
              "copyable": false
            },
            {
              "command": "\"images\": [\n  {\n    \"path\": \"/image1.jpg\",\n    \"title\": \"First\"\n  },\n  {\n    \"path\": \"/image2.jpg\",\n    \"title\": \"Second\"\n  }\n]",
              "description": "Objects in arrays - note NO comma after the last object"
            }
          ]
        },
        {
          "title": "3. Preview Changes Locally",
          "purpose": "Test your changes on your computer before publishing to the live website",
          "commands": [
            {
              "command": "cd ~/Documents/maggie",
              "description": "Navigate to the maggie project folder"
            },
            {
              "command": "npm run dev",
              "description": "Start local development server"
            },
            {
              "command": "open http://localhost:3000",
              "description": "View your changes in the browser (Ctrl+C to stop server)"
            }
          ]
        },
        {
          "title": "4. Quick Reference - Common Tasks",
          "purpose": "Helpful commands for checking status and troubleshooting",
          "commands": [
            {
              "command": "git status",
              "description": "Check what files you've changed"
            },
            {
              "command": "git pull",
              "description": "Get latest changes before starting work"
            },
            {
              "command": "git log --oneline -5",
              "description": "See recent changes to the website"
            },
            {
              "command": "git stash",
              "description": "Temporarily save your changes without committing (useful before git pull)"
            },
            {
              "command": "git stash pop",
              "description": "Restore your temporarily saved changes"
            },
            {
              "command": "git stash clear",
              "description": "Delete all temporarily saved changes (use carefully!)"
            },
            {
              "command": "git diff",
              "description": "See exactly what you've changed in files"
            },
            {
              "command": "git checkout -- filename.json",
              "description": "Undo changes to a specific file (revert to last saved version)"
            },
            {
              "command": "git revert HEAD",
              "description": "Undo the last commit (creates a new commit that undoes changes)"
            }
          ]
        },
        {
          "title": "5. üöÄ PUBLISH Changes to Live Website",
          "purpose": "‚ö†Ô∏è FINAL STEP: Upload your changes to make them live on maggietaylor.com",
          "isPublishStep": true,
          "commands": [
            {
              "command": "cd ~/Documents/maggie",
              "description": "Navigate to the maggie project folder"
            },
            {
              "command": "git add -A",
              "description": "Stage all your changes for commit"
            },
            {
              "command": "git commit -m \"Describe what you changed\"",
              "description": "Save changes with YOUR description (e.g. \"Added new artwork\" or \"Updated workshop dates\")"
            },
            {
              "command": "git push",
              "description": "üöÄ Upload changes to GitHub (website updates automatically in 2-3 minutes)"
            }
          ]
        }
      ]
    },
    {
      "id": "git",
      "title": "Git",
      "description": "Git commands and workflows for version control",
      "icon": "üîß",
      "categories": [
        {
          "title": "Basic Commands",
          "commands": [
            {
              "command": "git status",
              "description": "Check repository status and see what files have changed"
            },
            {
              "command": "git add .",
              "description": "Stage all changes for commit"
            },
            {
              "command": "git add filename.txt",
              "description": "Stage specific file for commit"
            },
            {
              "command": "git commit -m \"Your message here\"",
              "description": "Commit staged changes with a descriptive message"
            },
            {
              "command": "git push",
              "description": "Push commits to remote repository"
            },
            {
              "command": "git pull",
              "description": "Pull latest changes from remote repository"
            },
            {
              "command": "git log --oneline",
              "description": "View commit history in compact format"
            }
          ]
        },
        {
          "title": "Branching & Merging",
          "commands": [
            {
              "command": "git branch",
              "description": "List all local branches (* shows current branch)"
            },
            {
              "command": "git branch -a",
              "description": "List all branches (local and remote)"
            },
            {
              "command": "git checkout -b feature-name",
              "description": "Create and switch to new branch"
            },
            {
              "command": "git checkout main",
              "description": "Switch to main branch"
            },
            {
              "command": "git merge feature-name",
              "description": "Merge feature branch into current branch"
            },
            {
              "command": "git branch -d feature-name",
              "description": "Delete local branch (after merging)"
            }
          ]
        },
        {
          "title": "Undoing Changes",
          "commands": [
            {
              "command": "git diff",
              "description": "See what changes you've made (not yet staged)"
            },
            {
              "command": "git diff --staged",
              "description": "See staged changes (ready to commit)"
            },
            {
              "command": "git checkout -- filename.txt",
              "description": "Discard changes to specific file (revert to last commit)"
            },
            {
              "command": "git reset HEAD filename.txt",
              "description": "Unstage specific file (keep changes)"
            },
            {
              "command": "git reset --hard HEAD",
              "description": "‚ö†Ô∏è Discard ALL changes (dangerous - cannot be undone)"
            },
            {
              "command": "git revert HEAD",
              "description": "Create new commit that undoes the last commit"
            }
          ]
        },
        {
          "title": "Stashing (Temporary Storage)",
          "commands": [
            {
              "command": "git stash",
              "description": "Temporarily save current changes without committing"
            },
            {
              "command": "git stash push -m \"Work in progress\"",
              "description": "Stash changes with a descriptive message"
            },
            {
              "command": "git stash list",
              "description": "List all stashed changes"
            },
            {
              "command": "git stash pop",
              "description": "Apply most recent stash and remove it from stash list"
            },
            {
              "command": "git stash apply",
              "description": "Apply most recent stash but keep it in stash list"
            },
            {
              "command": "git stash drop",
              "description": "Delete most recent stash without applying"
            },
            {
              "command": "git stash clear",
              "description": "‚ö†Ô∏è Delete all stashes (cannot be undone)"
            }
          ]
        },
        {
          "title": "Repository Setup",
          "commands": [
            {
              "command": "git init",
              "description": "Initialize new Git repository in current directory"
            },
            {
              "command": "git clone https://github.com/user/repo.git",
              "description": "Clone remote repository to local machine"
            },
            {
              "command": "git remote -v",
              "description": "Show remote repository URLs"
            },
            {
              "command": "git remote add origin https://github.com/user/repo.git",
              "description": "Add remote repository URL"
            }
          ]
        },
        {
          "title": "Git Configuration",
          "commands": [
            {
              "command": "git config --global user.name \"Your Name\"",
              "description": "Set your name for all repositories"
            },
            {
              "command": "git config --global user.email \"your.email@example.com\"",
              "description": "Set your email for all repositories"
            },
            {
              "command": "git config --global pull.rebase true",
              "description": "Always rebase when pulling (cleaner history)"
            },
            {
              "command": "git config --global init.defaultBranch main",
              "description": "Use 'main' as default branch name for new repos"
            },
            {
              "command": "git config --global core.autocrlf input",
              "description": "Handle line endings automatically (Mac/Linux)"
            },
            {
              "command": "git config --global core.editor \"code --wait\"",
              "description": "Use VS Code as default Git editor"
            },
            {
              "command": "git config --global alias.st status",
              "description": "Create shortcut: 'git st' for 'git status'"
            },
            {
              "command": "git config --global alias.co checkout",
              "description": "Create shortcut: 'git co' for 'git checkout'"
            },
            {
              "command": "git config --global alias.br branch",
              "description": "Create shortcut: 'git br' for 'git branch'"
            },
            {
              "command": "git config --global alias.unstage 'reset HEAD --'",
              "description": "Create shortcut: 'git unstage' to unstage files"
            },
            {
              "command": "git config --global alias.last 'log -1 HEAD'",
              "description": "Create shortcut: 'git last' to see last commit"
            },
            {
              "command": "git config --global alias.lg 'log --oneline --graph --decorate --all'",
              "description": "Create shortcut: 'git lg' for beautiful log with graph"
            },
            {
              "command": "git config --global alias.s 'status -s'",
              "description": "Create shortcut: 'git s' for short status"
            },
            {
              "command": "git config --global alias.cm 'commit -m'",
              "description": "Create shortcut: 'git cm \"message\"' for quick commits"
            },
            {
              "command": "git config --global alias.amend 'commit --amend --no-edit'",
              "description": "Create shortcut: 'git amend' to add changes to last commit"
            },
            {
              "command": "git config --global alias.undo 'reset --soft HEAD~1'",
              "description": "Create shortcut: 'git undo' to undo last commit (keep changes)"
            },
            {
              "command": "git config --global alias.wip 'commit -am \"WIP\"'",
              "description": "Create shortcut: 'git wip' for work-in-progress commits"
            },
            {
              "command": "git config --global alias.aliases 'config --get-regexp alias'",
              "description": "Create shortcut: 'git aliases' to list all your aliases"
            },
            {
              "command": "git config --global push.default simple",
              "description": "Only push current branch to matching branch"
            },
            {
              "command": "git config --list",
              "description": "View all current Git configuration settings"
            }
          ]
        },
        {
          "title": "Useful Shortcuts & Tips",
          "commands": [
            {
              "command": "git commit -am \"Message\"",
              "description": "Stage and commit all modified files in one command"
            },
            {
              "command": "git log --graph --oneline --all",
              "description": "Visual branch history with graph"
            },
            {
              "command": "git show HEAD",
              "description": "Show details of the last commit"
            },
            {
              "command": "git blame filename.txt",
              "description": "See who changed each line in a file"
            },
            {
              "command": "git clean -fd",
              "description": "Remove untracked files and directories"
            }
          ]
        },
        {
          "title": "Useful Links & Resources",
          "commands": [
            {
              "command": "https://git-scm.com/docs",
              "description": "üìñ Official Git Documentation - Complete reference"
            },
            {
              "command": "https://learngitbranching.js.org/",
              "description": "üéÆ Interactive Git Tutorial - Learn branching visually"
            },
            {
              "command": "https://ohshitgit.com/",
              "description": "üÜò Oh Shit, Git! - Fix common Git mistakes"
            },
            {
              "command": "https://gitexplorer.com/",
              "description": "üîç Git Explorer - Find the right Git command"
            },
            {
              "command": "https://github.com/git-tips/tips",
              "description": "üí° Git Tips - Collection of useful Git tricks"
            },
            {
              "command": "https://www.atlassian.com/git/tutorials",
              "description": "üìö Atlassian Git Tutorials - Comprehensive guides"
            },
            {
              "command": "https://gitignore.io/",
              "description": "üö´ .gitignore Generator - Create .gitignore files"
            }
          ]
        }
      ]
    },
    {
      "id": "seo",
      "title": "SEO & Google Search",
      "description": "Search engine optimization techniques and Google indexing",
      "icon": "üîç",
      "categories": [
        {
          "title": "Meta Tags",
          "commands": [
            {
              "command": "<title>Page Title (50-60 characters)</title>",
              "description": "Page title - most important SEO element"
            },
            {
              "command": "<meta name=\"description\" content=\"Page description 150-160 chars\">",
              "description": "Meta description - appears in search results"
            },
            {
              "command": "<meta name=\"keywords\" content=\"keyword1, keyword2, keyword3\">",
              "description": "Keywords (less important now, but still used)"
            },
            {
              "command": "<meta name=\"robots\" content=\"index, follow\">",
              "description": "Tell search engines to index and follow links"
            },
            {
              "command": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
              "description": "Mobile-friendly viewport (required for mobile SEO)"
            },
            {
              "command": "<link rel=\"canonical\" href=\"https://example.com/page\">",
              "description": "Canonical URL to prevent duplicate content issues"
            }
          ]
        },
        {
          "title": "Open Graph (Social Media)",
          "commands": [
            {
              "command": "<meta property=\"og:title\" content=\"Page Title\">",
              "description": "Title when shared on social media"
            },
            {
              "command": "<meta property=\"og:description\" content=\"Page description\">",
              "description": "Description when shared on social media"
            },
            {
              "command": "<meta property=\"og:image\" content=\"https://example.com/image.jpg\">",
              "description": "Image when shared (1200x630px recommended)"
            },
            {
              "command": "<meta property=\"og:url\" content=\"https://example.com/page\">",
              "description": "Canonical URL for social sharing"
            },
            {
              "command": "<meta property=\"og:type\" content=\"website\">",
              "description": "Type of content (website, article, etc.)"
            },
            {
              "command": "<meta name=\"twitter:card\" content=\"summary_large_image\">",
              "description": "Twitter card type for better Twitter sharing"
            }
          ]
        },
        {
          "title": "Google Indexing Process",
          "commands": [
            {
              "command": "Submit sitemap to Google Search Console",
              "description": "üìã Step 1: Add your sitemap.xml to help Google find all pages"
            },
            {
              "command": "Request indexing for new pages",
              "description": "üìã Step 2: Use 'Request Indexing' in Search Console for new content"
            },
            {
              "command": "Check robots.txt file",
              "description": "üìã Step 3: Ensure robots.txt allows Google to crawl your site"
            },
            {
              "command": "Monitor Core Web Vitals",
              "description": "üìã Step 4: Check page speed and user experience metrics"
            },
            {
              "command": "Build quality backlinks",
              "description": "üìã Step 5: Get other reputable sites to link to your content"
            },
            {
              "command": "Create quality content regularly",
              "description": "üìã Step 6: Publish fresh, valuable content consistently"
            }
          ]
        },
        {
          "title": "Structured Data (Schema)",
          "commands": [
            {
              "command": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Organization\",\n  \"name\": \"Your Company\",\n  \"url\": \"https://example.com\"\n}\n</script>",
              "description": "Organization schema for business information"
            },
            {
              "command": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Article\",\n  \"headline\": \"Article Title\",\n  \"author\": \"Author Name\",\n  \"datePublished\": \"2025-01-01\"\n}\n</script>",
              "description": "Article schema for blog posts and articles"
            },
            {
              "command": "<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"WebSite\",\n  \"name\": \"Site Name\",\n  \"url\": \"https://example.com\",\n  \"potentialAction\": {\n    \"@type\": \"SearchAction\",\n    \"target\": \"https://example.com/search?q={search_term_string}\",\n    \"query-input\": \"required name=search_term_string\"\n  }\n}\n</script>",
              "description": "Website schema with search functionality"
            }
          ]
        },
        {
          "title": "Essential SEO Tools & Links",
          "commands": [
            {
              "command": "https://search.google.com/search-console",
              "description": "üîß Google Search Console - Monitor your site's search performance"
            },
            {
              "command": "https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap",
              "description": "üìñ Google Sitemap Guide - How to create and submit sitemaps"
            },
            {
              "command": "https://pagespeed.web.dev/",
              "description": "‚ö° PageSpeed Insights - Test your site's loading speed"
            },
            {
              "command": "https://search.google.com/test/mobile-friendly",
              "description": "üì± Mobile-Friendly Test - Check if your site works on mobile"
            },
            {
              "command": "https://validator.schema.org/",
              "description": "‚úÖ Schema Validator - Test your structured data markup"
            },
            {
              "command": "https://developers.google.com/search/docs/appearance/structured-data",
              "description": "üìö Google Structured Data Guide - Complete reference"
            },
            {
              "command": "https://ahrefs.com/backlink-checker",
              "description": "üîó Backlink Checker - See who links to your site (free tool)"
            },
            {
              "command": "https://www.google.com/webmasters/tools/submit-url",
              "description": "üöÄ Submit URL to Google - Request indexing of single pages"
            }
          ]
        }
      ]
    },
    {
      "id": "nextjs",
      "title": "Next.js",
      "description": "Next.js development commands and patterns",
      "icon": "‚öõÔ∏è",
      "categories": [
        {
          "title": "CLI Commands",
          "commands": [
            {
              "command": "npx create-next-app@latest",
              "description": "Create new Next.js app"
            },
            {
              "command": "npm run dev",
              "description": "Start development server"
            },
            {
              "command": "npm run build",
              "description": "Build for production"
            }
          ]
        }
      ]
    },
    {
      "id": "aws",
      "title": "AWS CLI",
      "description": "AWS command line interface",
      "icon": "‚òÅÔ∏è",
      "categories": [
        {
          "title": "S3 Commands",
          "commands": [
            {
              "command": "aws s3 ls",
              "description": "List S3 buckets"
            },
            {
              "command": "aws s3 cp file.txt s3://bucket/",
              "description": "Copy file to S3"
            }
          ]
        }
      ]
    }
  ]
}
